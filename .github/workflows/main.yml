name: Announce Release to Discord
     on:
       release:
         types: [published]
     permissions:
       contents: write
       actions: write
     jobs:
       notify:
         runs-on: ubuntu-latest
         steps:
           - name: Debug Event
             run: |
               echo "Event: ${{ github.event_name }}"
               echo "Release ID: ${{ github.event.release.id }}"
               echo "Repository: ${{ github.repository }}"
           - name: Checkout
             uses: actions/checkout@v3
           - name: Build Artifacts
             run: |
               # Replace with your build commands
               echo "Building artifacts"
               touch Betafied.Addon.mcaddon || { echo "Failed to create Betafied.Addon.mcaddon"; exit 1; }
               touch Betafied.World.mcworld || { echo "Failed to create Betafied.World.mcworld"; exit 1; }
               ls -l
           - name: Upload Addon to Release
             uses: actions/upload-release-asset@v1
             with:
               upload_url: ${{ github.event.release.upload_url }}
               asset_path: Betafied.Addon.mcaddon
               asset_name: Betafied.Addon.mcaddon
               asset_content_type: application/octet-stream
           - name: Upload World to Release
             uses: actions/upload-release-asset@v1
             with:
               upload_url: ${{ github.event.release.upload_url }}
               asset_path: Betafied.World.mcworld
               asset_name: Betafied.World.mcworld
               asset_content_type: application/octet-stream
           - name: Get Artifact URLs
             id: artifacts
             run: |
               assets=$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                 "https://api.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}/assets")
               echo "Assets: $assets"
               addon_url=$(echo "$assets" | jq -r '.[] | select(.name == "Betafied.Addon.mcaddon") | .browser_download_url')
               world_url=$(echo "$assets" | jq -r '.[] | select(.name == "Betafied.World.mcworld") | .browser_download_url')
               if [ -z "$addon_url" ] || [ -z "$world_url" ]; then
                 echo "Error: Could not find artifact URLs"
                 exit 1
               fi
               echo "addon_url=$addon_url" >> $GITHUB_OUTPUT
               echo "world_url=$world_url" >> $GITHUB_OUTPUT
           - name: Send Discord Notification
             uses: Ilshidur/action-discord@0.3.2
             with:
               webhook: ${{ secrets.DISCORD_WEBHOOK }}
               args: '||@everyone|| New release!'
               embeds: |
                 [
                   {
                     "title": "${{ github.event.release.name }}",
                     "description": "${{ github.event.release.body || 'No notes provided' }}",
                     "url": "${{ github.event.release.html_url }}",
                     "color": 2105893,
                     "fields": [
                       {
                         "name": "Download Addon",
                         "value": "[Betafied.Addon.mcaddon](${{ steps.artifacts.outputs.addon_url }})",
                         "inline": true
                       },
                       {
                         "name": "Download World",
                         "value": "[Betafied.World.mcworld](${{ steps.artifacts.outputs.world_url }})",
                         "inline": true
                       }
                     ],
                     "footer": {
                       "text": "Changelog",
                       "icon_url": "https://cdn.discordapp.com/avatars/487431320314576937/bd64361e4ba6313d561d54e78c9e7171.png"
                     },
                     "timestamp": "${{ github.event.release.published_at }}"
                   }
                 ]
